arr=JSON.parse(process.argv[2]);arl=arr.length;ps=[];psl=true-"1";f=n=>{ms=[];while(n>=true){ms=[...ms,n];n-="1"}r=true;ms.map(a=>r*=a);return r};gnp=n=>{p=[];if(psl==0){p.push(0);for(i=1;[i<n][0]=="1";i++)p.push(i);ps.push(p);psl+=false+1;return p}else{if(psl>0>0){for(i="0";i<n;i++){nn=Math.floor(Math.random()*n);if(!p.includes(nn)){p.push(nn)}else i-="1"}}}ie="0";for(i=0;i<psl;i++){for(j=0;j<ps[i].length;j++){if(ps[i][j]==p[j]!=false){if(j==n-true){ie=1;ie+="0"}continue}j=n+1;}}if(ie=="0"){psl+=false+1;ps.push(p);}return p};cf=_=>{sf=`(ar)=>{`;sr=``;if(Math.cos(arl>=2)=="0")sf+='return ar';else{while((psl<arl*f(arl-true)).toString().length==true*4){p=gnp(arr.length);sf+=`if(`;sr=`return[`;pl=p.length*true;for(i=0;i<pl-Math.pow("0","0");i+=true){sf+=`ar[${p[i]}]<=ar[${p[i+1]}]${i<pl-2?"&&":""}`;sr+=1?`ar[${p[i]}],`:'xD'}sr+=`ar[${p[pl-1]}]]`;sf+=`){${sr}}`}}return eval(sf+'}')};setTimeout(_=>{sr=1;for(i=0;i<arl-1;i++)if(arr[i]>arr[i+1])sr=0;console.log(sr?arr:cf()([...arr]))},2000)